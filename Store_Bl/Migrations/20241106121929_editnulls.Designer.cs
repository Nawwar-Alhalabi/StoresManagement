// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Store_Bl.BL;


#nullable disable

namespace Store_Bl.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241106121929_editnulls")]
    partial class editnulls
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Store_Bl.Models.DeliveryForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Folder")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceNumber")
                        .HasColumnType("int");

                    b.Property<int>("Med_Dep_Id")
                        .HasColumnType("int");

                    b.Property<string>("RelatedDepartmentOrderForm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RelatedFolder")
                        .HasColumnType("int");

                    b.Property<int>("RelatedSerial")
                        .HasColumnType("int");

                    b.Property<int>("Serial")
                        .HasColumnType("int");

                    b.Property<int>("departmentOrderFormId")
                        .HasColumnType("int");

                    b.Property<int>("storeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Med_Dep_Id");

                    b.HasIndex("departmentOrderFormId")
                        .IsUnique();

                    b.HasIndex("storeId");

                    b.ToTable("DeliveryForms");
                });

            modelBuilder.Entity("Store_Bl.Models.DepartmentOrderForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Folder")
                        .HasColumnType("int");

                    b.Property<int>("IsApproved")
                        .HasColumnType("int");

                    b.Property<int>("Med_Dep_Id")
                        .HasColumnType("int");

                    b.Property<int>("Serial")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Med_Dep_Id");

                    b.HasIndex("StoreId");

                    b.ToTable("DepartmentOrderForms");
                });

            modelBuilder.Entity("Store_Bl.Models.DepartmentOrderItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("ApprovedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DepartmentOrderFormId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastDateDelivered")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("LastQuantityDelivered")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("QuantityRequired")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReasonForOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SerialNumber")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentOrderFormId");

                    b.ToTable("DepartmentOrderItems");
                });

            modelBuilder.Entity("Store_Bl.Models.ItemsDelivered", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DeliveredTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeliveryFormId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemCardNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("QuantityDelivered")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SerialNumber")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryFormId");

                    b.ToTable("ItemsDelivered");
                });

            modelBuilder.Entity("Store_Bl.Models.ItemsReceived", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemCardNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QuantityRecieved")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReceiptFormId")
                        .HasColumnType("int");

                    b.Property<int>("SerialNumber")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptFormId");

                    b.ToTable("ItemsReceived");
                });

            modelBuilder.Entity("Store_Bl.Models.Itemspurchased", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ExpectedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Max")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Min")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NumberOfItems")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PurchaseOrderFormId")
                        .HasColumnType("int");

                    b.Property<decimal>("QuantityToPurchase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReasonOfPurchase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SerialNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseOrderFormId");

                    b.ToTable("ItemsPurchased");
                });

            modelBuilder.Entity("Store_Bl.Models.MedicalDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dep_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dep_Officer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MedicalDepartments");
                });

            modelBuilder.Entity("Store_Bl.Models.PurchaseOrderForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountantApproval")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Folder")
                        .HasColumnType("int");

                    b.Property<int>("ManagerApproval")
                        .HasColumnType("int");

                    b.Property<int>("Serial")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("PurchaseOrderForms");
                });

            modelBuilder.Entity("Store_Bl.Models.ReceiptForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DocumentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<int>("Folder")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceNumber")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseOrderFormId")
                        .HasColumnType("int");

                    b.Property<string>("RelatedPurchaseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Serial")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TypeOfForm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseOrderFormId")
                        .IsUnique()
                        .HasFilter("[PurchaseOrderFormId] IS NOT NULL");

                    b.HasIndex("StoreId");

                    b.ToTable("ReceiptForms");
                });

            modelBuilder.Entity("Store_Bl.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfDeliver")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveredTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FinalBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Folder")
                        .HasColumnType("int");

                    b.Property<int>("ItemCardNumber")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ItemsTransfered")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Max")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Min")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Serial")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Store_Bl.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Storekeeper")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Store_Bl.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Medical_DepId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Medical_DepId");

                    b.HasIndex("StoreId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Store_Bl.Models.DeliveryForm", b =>
                {
                    b.HasOne("Store_Bl.Models.MedicalDepartment", "medicalDepartment")
                        .WithMany("deliveryForms")
                        .HasForeignKey("Med_Dep_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Store_Bl.Models.DepartmentOrderForm", "departmentOrderForm")
                        .WithOne("deliveryForm")
                        .HasForeignKey("Store_Bl.Models.DeliveryForm", "departmentOrderFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Store_Bl.Models.Store", "store")
                        .WithMany("deliveryForms")
                        .HasForeignKey("storeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("departmentOrderForm");

                    b.Navigation("medicalDepartment");

                    b.Navigation("store");
                });

            modelBuilder.Entity("Store_Bl.Models.DepartmentOrderForm", b =>
                {
                    b.HasOne("Store_Bl.Models.MedicalDepartment", "MedicalDepartment")
                        .WithMany("DepartmentOrderForms")
                        .HasForeignKey("Med_Dep_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Store_Bl.Models.Store", "Store")
                        .WithMany("DepartmentOrderForms")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MedicalDepartment");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Store_Bl.Models.DepartmentOrderItems", b =>
                {
                    b.HasOne("Store_Bl.Models.DepartmentOrderForm", "DepartmentOrderForm")
                        .WithMany("DepartmentOrderItems")
                        .HasForeignKey("DepartmentOrderFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepartmentOrderForm");
                });

            modelBuilder.Entity("Store_Bl.Models.ItemsDelivered", b =>
                {
                    b.HasOne("Store_Bl.Models.DeliveryForm", "DeliveryForm")
                        .WithMany("ItemsDelivered")
                        .HasForeignKey("DeliveryFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryForm");
                });

            modelBuilder.Entity("Store_Bl.Models.ItemsReceived", b =>
                {
                    b.HasOne("Store_Bl.Models.ReceiptForm", "ReceiptForm")
                        .WithMany("ItemsReceived")
                        .HasForeignKey("ReceiptFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReceiptForm");
                });

            modelBuilder.Entity("Store_Bl.Models.Itemspurchased", b =>
                {
                    b.HasOne("Store_Bl.Models.PurchaseOrderForm", "PurchaseForm")
                        .WithMany("ItemsPurchased")
                        .HasForeignKey("PurchaseOrderFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseForm");
                });

            modelBuilder.Entity("Store_Bl.Models.PurchaseOrderForm", b =>
                {
                    b.HasOne("Store_Bl.Models.Store", "Store")
                        .WithMany("PurchaseOrderForms")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Store_Bl.Models.ReceiptForm", b =>
                {
                    b.HasOne("Store_Bl.Models.PurchaseOrderForm", "PurchaseOrderForm")
                        .WithOne("ReceiptForm")
                        .HasForeignKey("Store_Bl.Models.ReceiptForm", "PurchaseOrderFormId");

                    b.HasOne("Store_Bl.Models.Store", "store")
                        .WithMany("ReceiptForms")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseOrderForm");

                    b.Navigation("store");
                });

            modelBuilder.Entity("Store_Bl.Models.Report", b =>
                {
                    b.HasOne("Store_Bl.Models.Store", "Store")
                        .WithMany("Reports")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Store_Bl.Models.User", b =>
                {
                    b.HasOne("Store_Bl.Models.MedicalDepartment", "MedicalDepartment")
                        .WithMany("users")
                        .HasForeignKey("Medical_DepId");

                    b.HasOne("Store_Bl.Models.Store", "Store")
                        .WithMany("users")
                        .HasForeignKey("StoreId");

                    b.Navigation("MedicalDepartment");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Store_Bl.Models.DeliveryForm", b =>
                {
                    b.Navigation("ItemsDelivered");
                });

            modelBuilder.Entity("Store_Bl.Models.DepartmentOrderForm", b =>
                {
                    b.Navigation("DepartmentOrderItems");

                    b.Navigation("deliveryForm");
                });

            modelBuilder.Entity("Store_Bl.Models.MedicalDepartment", b =>
                {
                    b.Navigation("DepartmentOrderForms");

                    b.Navigation("deliveryForms");

                    b.Navigation("users");
                });

            modelBuilder.Entity("Store_Bl.Models.PurchaseOrderForm", b =>
                {
                    b.Navigation("ItemsPurchased");

                    b.Navigation("ReceiptForm");
                });

            modelBuilder.Entity("Store_Bl.Models.ReceiptForm", b =>
                {
                    b.Navigation("ItemsReceived");
                });

            modelBuilder.Entity("Store_Bl.Models.Store", b =>
                {
                    b.Navigation("DepartmentOrderForms");

                    b.Navigation("PurchaseOrderForms");

                    b.Navigation("ReceiptForms");

                    b.Navigation("Reports");

                    b.Navigation("deliveryForms");

                    b.Navigation("users");
                });
#pragma warning restore 612, 618
        }
    }
}
